#!/usr/bin/perl -w

open FILE, 'rn5_refGene.gtf';
open MERGE, '>rn5_refGene_union.gtf';
my %transcrpt;
my %gene;
while(<FILE>){
	chomp;
	my ($chr,undef,$func,$str,$end,undef,$strand,undef,undef,$genid,undef,$traid) = split ;
	if($func eq "exon"){

		if (exists $transcrpt{$traid}){

			$transcrpt{$traid} .= "\t$chr,$str,$end,$strand";
		}
		else{
			$transcrpt{$traid} = "$chr,$str,$end,$strand";
			if(exists $gene{$genid}){
				$gene{$genid} .= "\t$traid";
			}
			else{
				$gene{$genid} = "$traid";
			}
		}
	}
}


foreach my $key (keys(%gene)){
	my @isoform = split /\t/, $gene{$key};
	if($#isoform==0){
		my @pos = split /\t/,$transcrpt{$isoform[0]};
		my $i = 0;
		foreach my $pos (@pos){
			$i++;
			my ($chr,$str,$end,$strand) = split /,/,$pos;
			print MERGE "$chr\trefGene\texon\t$str\t$end\t.\t$strand\t.\tgene_id $key exon_number \"$i\";\n";
		}

	}
	else{
		my $iso_ref = \@isoform;
		my @exon = &merge($iso_ref);
		my $chr = $exon[0];
		my $strand = $exon[1];
		for(my $i=2;$i<=$#exon;$i+=2){
			my $j = ($i)/2;
			print MERGE "$chr\trefGene_Merge\texon\t$exon[$i]\t$exon[$i+1]\t.\t$strand\t.\tgene_id $key exon_number \"$j\";\n";
		}
	}
}

sub merge{
	my $iso_ref = $_[0];
	my @isoform = @$iso_ref;
	my @merge;
	my $chr_r;
	my $strand_r;


	foreach my $isoform (@isoform){
		my @pos = split /\t/,$transcrpt{$isoform};
		my $i = 0;
		($chr_r,undef,undef,$strand_r) = split /,/,$pos[0];
		foreach my $pos (@pos){
			$i++;
			my ($chr,$str,$end,$strand) = split /,/,$pos;
			if($strand_r eq $strand){
				push @merge, $str..$end;
			}
			else{
				print "$pos\n";
			}
		}
	}
	@merge = sort{$a<=>$b} @merge;
	my %hash;
	@merge = grep { ++$hash{$_} < 2 } @merge;
	my @exon;
	push @exon, $merge[0];
	for(my $i=0;$i<$#merge;$i++){
		if($merge[$i+1]-$merge[$i]>1){
			push @exon, $merge[$i];
			push @exon, $merge[$i+1];
		}
	}
	push @exon, $merge[-1];
	return $chr_r,$strand_r,@exon;
}
